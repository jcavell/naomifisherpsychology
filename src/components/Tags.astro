---
import { makeUrl } from "../scripts/url";
import { topicTags, forTags, ageTags } from "../scripts/tags";

const { tags = [], uri = "tags" } = Astro.props;

//console.log("Core and synonym tags: " + coreAndSynonymTags);

const includedTopicTags = tags.filter((t) => topicTags.includes(t));
const includedAgeTags = tags.filter((t) => ageTags.includes(t));
const includedForTags = tags.filter((t) => forTags.includes(t));
---

{
  includedTopicTags.length > 0 && (
    <span class="tags">
      {includedTopicTags.map((tag: string, index: number) => (
        <>
          <a href={`/${uri}/${makeUrl(tag)}`}>{tag}</a>
          {includedTopicTags.length > index + 1 && <>, </>}
        </>
      ))}
    </span>
  )
}

{
  includedAgeTags.length > 0 && (
    <span class="ages">
      {includedAgeTags.map((tag: string, index: number) => (
        <>
          <a href={`/${uri}/${makeUrl(tag)}`}>{tag}</a>
          {includedAgeTags.length > index + 1 && <>, </>}
        </>
      ))}
    </span>
  )
}

{
  // includedForTags.length > 0 && (
  //   <span class="audience">
  //     {includedForTags.map((tag: string, index: number) => (
  //       <>
  //         <a href={`/${uri}/${makeUrl(tag)}`}>{tag}</a>
  //         {includedForTags.length > index + 1 && <>, </>}
  //       </>
  //     ))}
  //   </span>
  // )
}
